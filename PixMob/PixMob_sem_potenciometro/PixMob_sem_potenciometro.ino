#include <Arduino.h>
#include <IRremote.h>

// Variáveis do programa
const uint16_t pin_IR_LED = 5; // número do pino para ligar o transmissor IR
int tamanho;  // variável para guardar o número de bytes referente à cor enviada para a pulseira, necessário para a função IRSender

// Código de Cores que será enviado para a pulseira

uint16_t red1[]          = {1400, 1400, 700, 700, 700, 1400, 700, 2800, 700, 2100, 1400, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700};
uint16_t red2[]          = {1400, 1400, 700, 700, 700, 2100, 700, 2100, 700, 2800, 700, 700, 700, 700, 700, 1400, 1400, 2800, 1400, 2800, 700};
uint16_t green1[]             = {1400, 1400, 700, 700, 700, 700, 1400, 2800, 700, 1400, 700, 1400, 700, 1400, 700, 1400, 1400, 2800, 1400, 2800, 700};
uint16_t green2[]             = {700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 1400, 700, 1400, 700, 1400, 700, 700, 700, 2100, 1400, 2800, 700};
uint16_t blue1[]              = {700, 700, 700, 2100, 1400, 1400, 700, 2100, 700, 1400, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 700, 700, 700, 700, 700, 700, 2100, 700};
uint16_t blue2[]              = {700, 700, 700, 2100, 1400, 700, 700, 2800, 700, 1400, 700, 700, 700, 1400, 700, 700, 700, 700, 700, 700, 700, 700, 1400, 1400, 700, 2100, 700};
uint16_t magenta1[]           = {700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 2100, 1400, 2100, 700, 700, 700, 700, 1400, 2100, 700, 700, 700, 2100, 700};
uint16_t magenta2[]           = {700, 700, 700, 2100, 1400, 1400, 1400, 700, 1400, 1400, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 2100, 700, 1400, 1400, 700, 700};
uint16_t magenta3[]           = {700, 700, 700, 2100, 1400, 1400, 1400, 700, 1400, 1400, 700, 700, 700, 1400, 1400, 700, 700, 1400, 700, 2100, 1400, 700, 1400, 700, 700};
uint16_t yellow1[]            = {1400, 1400, 700, 700, 700, 700, 1400, 2800, 700, 2100, 700, 700, 700, 1400, 700, 1400, 1400, 2800, 1400, 2800, 700};
uint16_t yellow2[]            = {700, 700, 700, 2100, 1400, 1400, 700, 2100, 700, 1400, 700, 700, 700, 2800, 1400, 1400, 700, 2100, 1400, 2800, 700};
uint16_t pink1[]              = {700, 700, 700, 2100, 1400, 700, 700, 2800, 700, 1400, 700, 700, 700, 2800, 1400, 1400, 700, 2100, 700, 700, 700, 2100, 700};
uint16_t pink2[]              = {700, 700, 700, 2100, 1400, 700, 700, 2800, 700, 2100, 1400, 2800, 1400, 1400, 700, 2100, 700, 700, 700, 2100, 700};
uint16_t orange1[]           = {700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 2100, 700, 700, 700, 1400, 700, 700, 700, 1400, 700, 2100, 1400, 2800, 700};
uint16_t orange2[]           = {700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 2100, 1400, 2100, 700, 700, 700, 700, 1400, 2100, 1400, 2800, 700};
uint16_t white1[]             = {700, 700, 700, 2100, 1400, 700, 700, 2800, 700, 1400, 700, 700, 700, 2800, 1400, 1400, 700, 2100, 700, 1400, 700, 1400, 700};
uint16_t white2[]             = {700, 700, 700, 2100, 1400, 1400, 1400, 700, 1400, 1400, 700, 700, 700, 2800, 1400, 1400, 700, 700, 1400, 700, 700, 700, 1400, 700, 700};
uint16_t turquoise1[]          = {700, 700, 700, 700, 1400, 1400, 1400, 2800, 700, 1400, 700, 700, 1400, 1400, 700, 1400, 1400, 2800, 700, 700, 700, 2100, 700};
uint16_t turquoise2[]          = {700, 700, 700, 2100, 1400, 1400, 1400, 700, 1400, 1400, 700, 700, 700, 2100, 700, 700, 700, 1400, 700, 700, 700, 700, 700, 1400, 1400, 700, 700};
uint16_t turquoise3[]          = {700, 700, 700, 2100, 1400, 700, 700, 700, 700, 700, 1400, 1400, 700, 700, 700, 2100, 700, 700, 700, 1400, 700, 700, 700, 700, 1400, 700, 1400, 700, 700};
uint16_t off[]                = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

void setup() { // ajusta as configurações iniciais
  IrSender.begin(pin_IR_LED); // Inicializa o pino do Arduino que enviará os dados
  IrSender.enableIROut(38);   // Define a frequência da portadora do sinal IR
} // fim das configurações iniciais

void loop() { // loop de execução do programa principal
  // Leitura do valor do potenciômetro
  int randomColor = random(0, 6);
  // Mapeia o valor do potenciômetro para escolher a cor
if (randomColor <= 4) { 
    tamanho = sizeof white2 / sizeof *white1;
    IrSender.sendRaw(white2, tamanho, 38);
    
  }
  else if (randomColor >= 5) { 
   tamanho = sizeof off / sizeof *off;
    IrSender.sendRaw(off, tamanho, 38);
  }
  delay(300); // Aguarde um tempo antes de ler novamente o potenciômetro
}
